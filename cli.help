# Package install examples
CLI:
```
salt '*' pkg.install docker.io // install docker cli
salt '*' pkg.install tree // install tree cli
```

File:
state.sls refers to the file type (sls)
emacs is the file name containing install configuration informations
emacs.sls file must be located /srv/salt/

```
salt vagrant-salt-minion state.sls emacs // install pkg from config file
```


salt '*' pkg.list_pkgs // list install pkgs
salt '*' sys.doc ssh // get the doc
salt '*' service.status docker // same as systemctl


# Example Mysql install

doc for mysql install on minion and conf
https://www.digitalocean.com/community/tutorials/saltstack-infrastructure-creating-salt-states-for-mysql-database-servers

salt '*' pkg.install mysql-server
salt '*' pkg.install python3-mysqldb // require for mysql salt module
salt '*' pkg.install debconf-utils
salt '*' mysql.db_list
salt '*' mysql.db_check dbname
salt '*' mysql.db_create 'test'
if mysql not working restart minion service and master

grain default command will read and write from /etc/salt/grain
salt -G 'os:UBUNTU' test.version //to test version by os
salt -G 'os:UBUNTU' grains.item uuid // display grant uuid info for ubuntu os minion
salt '*' saltutil.clear_cache

GRAIN Cli ex

```
salt -G 'os:UBUNTU' grains.setval env dev
salt -G 'env:dev' grains.item uuid
vagrant-salt-minion:
    ----------
    uuid:
        05a38cc4-4d2c-4f2c-9cbd-97af5563c3a1
```

GRAIN file ex

```
vi /etc/salt/minion.d/grains.conf
```

add:
```
grains:
  lol:dev
```

Restart services and run:
```
salt -G 'lol:dev' grains.item env
vagrant-salt-minion:
    ----------
    env:
        dev
```


STATES - SCRIPTS
state.sls refers to the file type (sls)
emacs is the file name containing install configuration informations
emacs.sls file must be located /srv/salt/
webserver.sls
web:
  pkg.latest:
    - pkgs:
      - nginx
      - php5-fpm
      - php5-cli
      - php5-gd
      - php5-mcrypt
      - php5-mysql

install-php-mcrypt-fpm:
  file.symlink:
    - name: /etc/php5/fpm/conf.d/20-mcrypt.ini
    - target: /etc/php5/mods-available/mcrypt.ini
    - require:
      - pkg: web

install-php-mcrypt-cli:
  file.symlink:
    - name: /etc/php5/cli/conf.d/20-mcrypt.ini
    - target: /etc/php5/mods-available/mcrypt.ini
    - require:
      - pkg: web


/srv/salt/web.sls

nginx:
  pkg.latest:
    - refresh: True

  service.running:
    - reload: True
    - enable: True
    - watch:
      - pkg: nginx

/etc/nginx/sites-available/webserver.conf:
  file.managed:
    - source: salt://files/templates/nginx.conf
    - template: jinja
    - context:
      domain: mehdi
    - require_in:
      - file: /etc/nginx/sites-enabled/webserver.conf

/etc/nginx/sites-enabled/webserver.conf:
  file.symlink:
    - target: /etc/nginx/sites-available/webserver.conf
    - require:
      - pkg: nginx

/etc/nginx/sites-enabled/default:
  file:
    - absent
    - require:
      - pkg: nginx

/etc/nginx/sites-enabled/webserver.conf

server {
       listen 81;
       listen [::]:81;

       server_name mehdi.com;

       root /var/www/html/;
       index index.html;

       location / {
               try_files $uri $uri/ =404;
       }
}

/srv/salt/files/templates/nginx.conf
server {
       listen 81;
       listen [::]:81;

       server_name mehdi.com;

       root /var/www/html/;
       index index.html;

       location / {
               try_files $uri $uri/ =404;
       }
}

/srv/salt/top.sls
